{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "https://raw.githubusercontent.com/CFIA-NCFAD/nf-virontus/master/nextflow_schema.json",
  "title": "CFIA-NCFAD/nf-virontus pipeline parameters",
  "description": "Nextflow workflow for Nanopore sequence analysis of viruses",
  "type": "object",
  "definitions": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": [
        "input"
      ],
      "properties": {
        "input": {
          "type": "string",
          "fa_icon": "fas fa-file-csv",
          "help_text": "You will need to create a samplesheet with information about the samples you would like to analyse before running the pipeline. Use this parameter to specify its location. It has to be a table with 2 columns, and a header row. See [usage docs](https://github.com/CFIA-NCFAD/nf-virontus/blob/master/docs/usage.md).",
          "description": "Path to CSV, TSV, Excel XLSX or LibreOffice ODS file containing information about the samples you would like to analyse."
        },
        "outdir": {
          "type": "string",
          "description": "The output directory where the results will be saved.",
          "default": "./results",
          "fa_icon": "fas fa-folder-open"
        },
        "save_cat_reads": {
          "type": "boolean",
          "default": true,
          "fa_icon": "fas fa-file-import",
          "description": "Option whether or not to save the concatenated reads FASTQ file for each sample to the output directory."
        },
        "output_hardclipped_reads": {
          "type": "boolean",
          "default": false,
          "fa_icon": "fas fa-file-import",
          "description": "Output reads with primers hard-clipped rather than just soft-clipped. Fgbio ClipBam is used to remove primer sequences that have been soft-clipped by iVar."
        },
        "email": {
          "type": "string",
          "description": "Email address for completion summary.",
          "fa_icon": "fas fa-envelope",
          "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
        },
        "min_sample_reads": {
          "type": "integer",
          "description": "Min number of reads to proceed with analysis.",
          "default": 100
        }
      }
    },
    "reference_genome_options": {
      "title": "Reference genome options",
      "type": "object",
      "fa_icon": "fas fa-dna",
      "description": "Options for the reference genome indices used to align reads.",
      "properties": {
        "genome": {
          "type": "string",
          "description": "Name of viral reference genome. (e.g. 'MN908947.3')",
          "help_text": "Only reference genomes specified in Nextflow configuration files are valid input.",
          "fa_icon": "fas fa-book"
        },
        "fasta": {
          "type": "string",
          "fa_icon": "fas fa-font",
          "description": "Path to FASTA genome file.",
          "help_text": "If you have no genome reference available, the pipeline can build one using a FASTA file. This requires additional time and resources, so it's better to use a pre-build index if possible."
        },
        "gff": {
          "type": "string",
          "description": "Full path to GFF annotation file.",
          "fa_icon": "fas fa-file-invoice"
        },
        "primer_bed": {
          "type": "string",
          "description": "A BED file containing primer coordinates. iVar is used to trim primer sequences after read alignment and before variant calling.",
          "help_text": "iVar uses the primer positions relative to the viral genome supplied in this file to soft clip primer sequences from a coordinate sorted BAM file. The file must be in BED format as highlighted below:\n\n```\nMN908947.3 30 54 nCoV-2019_1_LEFT 60 -\nMN908947.3 385 410 nCoV-2019_1_RIGHT 60 +\nMN908947.3 320 342 nCoV-2019_2_LEFT 60 -\nMN908947.3 704 726 nCoV-2019_2_RIGHT 60 +\n```",
          "fa_icon": "fas fa-assistive-listening-systems"
        },
        "left_primer_suffix": {
          "type": "string",
          "description": "Left primer suffix",
          "fa_icon": "fas fa-arrow-left",
          "default": "_LEFT"
        },
        "right_primer_suffix": {
          "type": "string",
          "description": "Right primer suffix",
          "fa_icon": "fas fa-arrow-right",
          "default": "_RIGHT"
        },
        "save_reference": {
          "type": "boolean",
          "fa_icon": "fas fa-save",
          "description": "If generated by the pipeline save reference genome related files to the results folder."
        }
      }
    },
    "sars_cov_2_analysis_options": {
      "title": "SARS-CoV-2 Analysis Options",
      "type": "object",
      "fa_icon": "fas fa-virus",
      "description": "SARS-CoV-2 specific analysis options and convenience flags.",
      "properties": {
        "scov2": {
          "type": "boolean",
          "description": "Convenience flag for setting `--genome 'MN908947.3'`, i.e. [SARS-CoV-2 Wuhan-Hu-1](https://www.ncbi.nlm.nih.gov/nuccore/MN908947.3/)",
          "fa_icon": "fas fa-virus"
        },
        "artic_v3": {
          "type": "boolean",
          "description": "Convenience flag for setting [ARTIC V3 primer scheme BED file](https://github.com/artic-network/artic-ncov2019/blob/master/primer_schemes/nCoV-2019/V3/nCoV-2019.bed) for primer trimming.",
          "fa_icon": "fas fa-cut"
        },
        "artic_v4": {
          "type": "boolean",
          "description": "Convenience flag for setting [ARTIC V4 primer scheme BED file](https://github.com/artic-network/artic-ncov2019/blob/master/primer_schemes/nCoV-2019/V4/SARS-CoV-2.scheme.bed) for primer trimming.",
          "fa_icon": "fas fa-cut"
        },
        "artic_v4_1": {
          "type": "boolean",
          "description": "Convenience flag for setting [ARTIC V4.1 primer scheme BED file](https://github.com/artic-network/artic-ncov2019/blob/master/primer_schemes/nCoV-2019/V4.1/SARS-CoV-2.scheme.bed) for primer trimming.",
          "fa_icon": "fas fa-cut"
        },
        "freed": {
          "type": "boolean",
          "description": "Convenience flag for setting 1200bp [Freed et al (2020)](https://academic.oup.com/biomethods/article/5/1/bpaa014/5873518) [primer scheme BED file](https://zenodo.org/record/3897530) for primer trimming.",
          "fa_icon": "fas fa-cut"
        }
      }
    },
    "pycoqc_options": {
      "title": "PycoQC options",
      "type": "object",
      "fa_icon": "fas fa-stethoscope",
      "description": "[PycoQC](https://github.com/tleonardi/pycoQC) computes metrics and generates interactive QC plots for Oxford Nanopore technologies sequencing data.",
      "properties": {
        "sequencing_summary": {
          "type": "string",
          "description": "PycoQC needs a text summary file generated by ONT Albacore or Guppy (e.g. 'sequencing_summary.txt'). PycoQC can read compressed 'sequencing_summary.txt' files ('gzip', 'bz2', 'zipâ€™, 'xz').",
          "default": null,
          "fa_icon": "fas fa-file-alt"
        }
      }
    },
    "mosdepth_options": {
      "type": "object",
      "title": "Mosdepth options",
      "properties": {
        "mosdepth_window_size": {
          "type": "integer",
          "description": "This option unsets the '-e' parameter in 'ivar trim' to discard reads without primers. See [iVar docs for more info](https://andersen-lab.github.io/ivar/html/manualpage.html#autotoc_md16)",
          "default": false,
          "fa_icon": "fas fa-cut"
        }
      }
    },
    "ivar_options": {
      "type": "object",
      "title": "iVar primer trimming options",
      "properties": {
        "ivar_trim_noprimer": {
          "type": "boolean",
          "description": "This option unsets the '-e' parameter in 'ivar trim' to discard reads without primers. See [iVar docs for more info](https://andersen-lab.github.io/ivar/html/manualpage.html#autotoc_md16)",
          "default": false,
          "fa_icon": "fas fa-cut"
        }
      }
    },
    "nextclade_options": {
      "type": "object",
      "title": "Nextclade analysis options",
      "properties": {
        "nextclade_dataset": {
          "type": "string",
          "description": "Nextclade dataset to use for analysis",
          "default": "sars-cov-2"
        },
        "nextclade_dataset_path": {
          "type": "string",
          "description": "User-specified Nextclade dataset to use for analysis",
          "default": null
        }
      }
    },
    "variant_calling_options": {
      "title": "Variant calling options",
      "type": "object",
      "description": "Various options for the variant calling branch of the pipeline.",
      "properties": {
        "clair3_user_variant_model": {
          "type": "string",
          "description": "Path to user-specified Clair3 model for variant calling.",
          "default": null
        },
        "clair3_variant_model": {
          "type": "string",
          "description": "Built-in Clair3 model for variant calling",
          "default": "r941_prom_sup_g5014"
        },
        "minor_allele_fraction": {
          "type": "number",
          "minimum": 0,
          "maximum": 1.0,
          "default": 0.25,
          "description": "Minor variant allele frequency/fraction.",
          "fa_icon": "fas fa-compress-alt"
        },
        "major_allele_fraction": {
          "type": "number",
          "minimum": 0,
          "maximum": 1.0,
          "default": 0.75,
          "description": "Major variant allele frequency/fraction. Only major variant alleles are used for generating a consensus sequence.",
          "fa_icon": "fas fa-expand-alt"
        },
        "low_coverage": {
          "type": "integer",
          "minimum": 0,
          "default": 10,
          "description": "Low coverage depth threshold. Consensus sequence positions with less than this coverage depth will be masked with `N`."
        }
      },
      "fa_icon": "fas fa-dna"
    },
    "kraken2_options": {
      "title": "Kraken2 analysis options",
      "type": "object",
      "description": "Options for [Kraken2](https://ccb.jhu.edu/software/kraken2/) taxonomic classification and host subtraction analysis.",
      "default": "",
      "properties": {
        "kraken2_db": {
          "type": "string",
          "default": null,
          "fa_icon": "fas fa-database",
          "description": "Path to [Kraken2](https://ccb.jhu.edu/software/kraken2/) index/database."
        },
        "subtract_host": {
          "type": "boolean",
          "fa_icon": "fas fa-cut",
          "description": "Subtract host (and any other classified) reads prior to analysis."
        }
      },
      "fa_icon": "fas fa-fast-forward"
    },
    "process_skipping_options": {
      "title": "Process skipping options",
      "type": "object",
      "description": "Options for skipping running of certain optional processes",
      "default": "",
      "properties": {
        "skip_nanoplot": {
          "type": "boolean",
          "default": false,
          "fa_icon": "fas fa-fast-forward",
          "description": "Skip running [NanoPlot](https://github.com/wdecoster/NanoPlot)"
        },
        "skip_kraken2": {
          "type": "boolean",
          "default": false,
          "fa_icon": "fas fa-fast-forward",
          "description": "Skip [Kraken2](https://ccb.jhu.edu/software/kraken2/)."
        },
        "skip_pycoqc": {
          "type": "boolean",
          "default": false,
          "fa_icon": "fas fa-fast-forward",
          "description": "Skip [PycoQC](https://github.com/tleonardi/pycoQC)."
        }
      }
    },
    "slurm_options": {
      "title": "Slurm executor options",
      "type": "object",
      "description": "Options for executing this pipeline on a Slurm scheduler for an HPC cluster. The Slurm queue (or partition) must be specified in order to run the pipeline on Slurm cluster.",
      "default": "",
      "properties": {
        "slurm_queue": {
          "type": "string",
          "default": null,
          "description": "Slurm queue or partition to run the pipeline on.",
          "help_text": "This will be specific to the cluster you're using! Please check with the available queues with `$ sinfo` or check with your cluster admins to see which queue to use."
        },
        "slurm_queue_size": {
          "type": "integer",
          "default": 100,
          "minimum": 1,
          "description": "Number of jobs Nextflow can queue simultaneously on the Slurm cluster.",
          "help_text": "Please respect others using the cluster. The Slurm cluster is a likely a public resource so please specify a reasonable value."
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "help": {
          "type": "boolean",
          "description": "Display help text.",
          "hidden": true,
          "fa_icon": "fas fa-question-circle"
        },
        "publish_dir_mode": {
          "type": "string",
          "default": "copy",
          "hidden": true,
          "description": "Method used to save pipeline results to output directory.",
          "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
          "fa_icon": "fas fa-copy",
          "enum": [
            "symlink",
            "rellink",
            "link",
            "copy",
            "copyNoFollow",
            "move"
          ]
        },
        "multiqc_config": {
          "type": "string",
          "description": "Custom MultiQC config YAML file.",
          "default": null
        },
        "email_on_fail": {
          "type": "string",
          "description": "Email address for completion summary, only when pipeline fails.",
          "fa_icon": "fas fa-exclamation-triangle",
          "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
          "hidden": true,
          "help_text": "This works exactly as with `--email`, except emails are only sent if the workflow is not successful."
        },
        "plaintext_email": {
          "type": "boolean",
          "description": "Send plain-text email instead of HTML.",
          "fa_icon": "fas fa-remove-format",
          "hidden": true,
          "help_text": "Set to receive plain-text e-mails instead of HTML formatted."
        },
        "monochrome_logs": {
          "type": "boolean",
          "description": "Do not use coloured log outputs.",
          "fa_icon": "fas fa-palette",
          "hidden": true,
          "help_text": "Set to disable colourful command line output and live life in monochrome."
        },
        "tracedir": {
          "type": "string",
          "format": "directory-path",
          "description": "Directory to keep pipeline Nextflow logs and reports.",
          "default": "${params.outdir}/pipeline_info",
          "fa_icon": "fas fa-cogs",
          "hidden": true
        },
        "singularity_pull_docker_container": {
          "type": "boolean",
          "hidden": true,
          "description": "Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead.",
          "fa_icon": "fas fa-toolbox",
          "help_text": "This may be useful for example if you are unable to directly pull Singularity containers to run the pipeline due to http/https proxy issues."
        },
        "validate_params": {
          "type": "boolean",
          "description": "Boolean whether to validate parameters against the schema at runtime",
          "default": true,
          "fa_icon": "fas fa-check-square",
          "hidden": true
        },
        "show_hidden_params": {
          "type": "boolean",
          "fa_icon": "far fa-eye-slash",
          "description": "Show all params when using `--help`",
          "hidden": true,
          "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
        }
      }
    },
    "max_job_request_options": {
      "title": "Max job request options",
      "type": "object",
      "fa_icon": "fab fa-acquisitions-incorporated",
      "description": "Set the top limit for requested resources for any single job.",
      "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
      "properties": {
        "max_cpus": {
          "type": "integer",
          "description": "Maximum number of CPUs that can be requested    for any single job.",
          "default": 16,
          "fa_icon": "fas fa-microchip",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
        },
        "max_memory": {
          "type": "string",
          "description": "Maximum amount of memory that can be requested for any single job.",
          "default": "128.GB",
          "fa_icon": "fas fa-memory",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
        },
        "max_time": {
          "type": "string",
          "description": "Maximum amount of time that can be requested for any single job.",
          "default": "240.h",
          "fa_icon": "far fa-clock",
          "hidden": true,
          "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/input_output_options"
    },
    {
      "$ref": "#/definitions/reference_genome_options"
    },
    {
      "$ref": "#/definitions/sars_cov_2_analysis_options"
    },
    {
      "$ref": "#/definitions/mosdepth_options"
    },
    {
      "$ref": "#/definitions/ivar_options"
    },
    {
      "$ref": "#/definitions/nextclade_options"
    },
    {
      "$ref": "#/definitions/pycoqc_options"
    },
    {
      "$ref": "#/definitions/variant_calling_options"
    },
    {
      "$ref": "#/definitions/kraken2_options"
    },
    {
      "$ref": "#/definitions/process_skipping_options"
    },
    {
      "$ref": "#/definitions/slurm_options"
    },
    {
      "$ref": "#/definitions/generic_options"
    },
    {
      "$ref": "#/definitions/max_job_request_options"
    }
  ]
}