/*
========================================================================================
    Config file for defining DSL2 per module options and publishing paths
========================================================================================
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {
  withName: 'CHECK_SAMPLE_SHEET' {
    publishDir = [
      [
        path: { "${params.outdir}/pipeline_info" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'CAT_FASTQ' {
    publishDir = [
      [
        path: { "${params.outdir}/reads" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'NANOPLOT' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/nanoplot" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'PYCOQC' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/pycoqc" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'MINIMAP2' {
    publishDir = [
      [
        path: { "${params.outdir}/minimap2" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'IVAR_TRIM' {
    publishDir = [
      [
        path: { "${params.outdir}/minimap2" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'FGBIO_CLIPBAM' {
    publishDir = [
      [
        path: { "${params.outdir}/reads/hardclipped/bam" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'SAMTOOLS_FASTQ' {
    publishDir = [
      [
        path: { "${params.outdir}/reads/hardclipped" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'MOSDEPTH' {
    publishDir = [
      [
        path: { "${params.outdir}/minimap2/mosdepth" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'CLAIR3' {
    publishDir = [
      [
        path: { "${params.outdir}/variants" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'BCFTOOLS_CONSENSUS' {
    publishDir = [
      [
        path: { "${params.outdir}/variants/consensus" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'BCFTOOLS_FILTER' {
    publishDir = [
      [
        path: { "${params.outdir}/variants" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'BCFTOOLS_STATS_PRE_FILTER' {
    publishDir = [
      [
        path: { "${params.outdir}/variants/stats/pre_filter" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'BCFTOOLS_STATS_POST_FILTER' {
    publishDir = [
      [
        path: { "${params.outdir}/variants/stats/post_filter" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'VCF_FILTER_FRAMESHIFT' {
    publishDir = [
      [
        path: { "${params.outdir}/variants" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'SNPEFF_BUILD' {
    publishDir = [
      [
        path: { "${params.outdir}/snpeff_db" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'SNPEFF_ANN' {
    publishDir = [
      [
        path: { "${params.outdir}/variants/snpeff" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'SNPSIFT' {
    publishDir = [
      [
        path: { "${params.outdir}/variants/snpeff" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'SIMPLER_SNPSIFT' {
    publishDir = [
      [
        path: { "${params.outdir}/variants/snpeff" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'PRIMER_BED_TO_AMPLICON_BED' {
    publishDir = [
      [
        path: { "${params.outdir}/pipeline_info" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
  withName: 'PANGOLIN' {
    ext.args = ''
    publishDir = [
      [
        path: { "${params.outdir}/pangolin" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
      ]
    ]
  }
}
